import random
cube = []
# TOP FRONT RIGHT LEFT BACK DOWN
# uncomment above code if your terminal supports color, otherwise use the following:
w = "W"  # White
o = "O"   # Orange
g = "G"   # Green
b = "B"   # Blue
r = "R"   # Red
y = "Y"   # Yellow
text = w + o + g + b + r + y
colors = [w,o,g,b,r,y]
for color in range(len(colors)):
	face = []
	for k in range(3): face.append([colors[color] for i in range(3)])
	cube.append(face)
'''
count=1
face=[]
for i in range(6):
	face=[]
	for k in range(3):
		row=[]
		for j in range(3):
			row.append(count)
			count+=1
		face.append(row)
	cube.append(face)'''
# print(cube) # Test for cube rigging
# for face in cube: print(face)


# CUBE RIG
def renderCube():
	layout="""
   _______.
  /{}/{}/{} /| 
 /{}/{}/{} / | 
/{}/{}/{} / {}/
+—+—+—+ {}/|
|{}|{}|{}|{}/{}/ 
+—+—+—+/{}/|
|{}|{}|{}|{}/{}/
+—+—+—+/{}/
|{}|{}|{}|{}/
+—+—+—+/
""".format(	cube[0][0][0], cube[0][0][1], cube[0][0][2], cube[0][1][0],cube[0][1][1], cube[0][1][2], cube[0][2][0], cube[0][2][1], cube[0][2][2], cube[2][0][2], cube[2][0][1], cube[1][0][0], cube[1][0][1], cube[1][0][2], cube[2][0][0], cube[2][1][2], cube[2][1][1], cube[1][1][0], cube[1][1][1], cube[1][1][2], cube[2][1][0], cube[2][2][2], cube[2][2][1], cube[1][2][0], cube[1][2][1], cube[1][2][2], cube[2][2][0])
	print(layout)
# Functions for movement use
def transpose(original_array, inverse=False):
	# Row 1 becomes Column 3 -> 90° Clockwise
	array=original_array[:]
	transposedArray=[]
	# Take first element of each row 
	for elem in range(0, len(array[0])):
		newRow=[]
		for row in array:
			newRow.append(row[elem])	
		if inverse:
			print('Inverse on')	
			transposedArray.append(newRow)
		else: transposedArray.append(newRow[::-1])
	return transposedArray
def mirror(original_array):
	mirrored=[]
	for i in original_array:
		mirrored.append(i[::-1])
	return mirrored

# Principal Moves
def y(times=1): # Moves clockwise wrt y axis
	for i in range(times):
		cube[1], cube[3], cube[4], cube[2] = cube[2], cube[1], mirror(cube[3]), mirror(cube[4])
		cube[0], cube[5] = transpose(cube[0]), transpose(transpose(transpose(cube[5])))
def x(times=1): # Moves clockwise wrt x axis
	for i in range(times):
		cube[1], cube[0], cube[4], cube[5] = cube[5], cube[1], cube[0][::-1], cube[4][::-1]
		cube[3], cube[2] = transpose(transpose(transpose(cube[3]))), transpose(cube[2])
def z(times=1): # Moves clockwise wrt z axis
	for i in range(times):	
		cube[0], cube[2], cube[5], cube[3] = transpose(cube[3], False), transpose(cube[0], False), transpose(cube[2], False), transpose(cube[5], False)
		cube[1], cube[4] = transpose(cube[1]), transpose(cube[4])
def u(times=1):
	for i in range(times):
		cube[1][0], cube[3][0], cube[4][0], cube[2][0]= cube[2][0], cube[1][0], cube[3][0][::-1], cube[4][0][::-1]
		cube[0]=transpose(cube[0])

# Using x, y, z and u we can recreate every other move
def r(times=1):
	for i in range(times):	
		z(3)
		u()
		z()
def l(times=1):
	for i in range(times):
		z()
		u()
		z(3)
def d(times=1):
	for i in range(times):
		z(2)
		u()
		z(2)
def f(times=1):
	for i in range(times):
		x()
		u()
		x(3)
def b(times=1):
	for i in range(times):
		x(3)
		u()
		x()
def m(times=1):
	for i in range(times):
		l(3)
		r()
		x(3)

def generateShuffle(intensity):
	shuffle=''
	moves=["u","r","l","f","d","b"]
	for i in range(intensity):
		change=''
		move=random.choice(moves)
		changeRandomizer = random.randint(1,6)
		if changeRandomizer==1:
			change='\''
		elif changeRandomizer==2:
			change='2'
		move=move+change
		shuffle+=move+" "
	return shuffle[:-1]
		
movePreset=[]
# MAIN
# Move Input
print("="*40+'\n',"Rubik's Cube Simulator\nMade by Aaryan Pandey and Pranjal Srivastava, Class XII-G\n","="*40+'\n')
count=0
print("Would you like to start the cube with a preset?")
print("""[1] Random Shuffle
[2] Fully solved
[3] Checkerboard
[4] Cube in a cube
[5] Cube in a cube in a cube
[6] Staircase""")
presetChoice = int(input("Enter your choice: "))
choice = "" # So that no more choices get asked and program loop can start
if presetChoice==1:
	movePreset=generateShuffle(15).split()
if presetChoice==2:
	movePreset="U2 U2".split()
if presetChoice==3:
	movePreset="U2 D2 F2 B2 L2 R2".split()
if presetChoice==4:
	movePreset="F L F U’ R U F2 L2 U’ L’ B D’ B’ L2 U".split()
if presetChoice==5:
	movePreset="U’ L’ U’ F’ R2 B’ R F U B2 U B’ L U’ F U R F’".split()
if presetChoice==6:
	movePreset="L2 F2 D' L2 B2 D' U' R2 B2 U' L' B2 L D L B' D L' U".split()
while True:
	if count < len(movePreset):
		move = movePreset[count].lower().replace(' ', '')
		print(move)
		count+=1
	else:
		print('''
	  y  ⤵ cw
	  ⬆
	  |
	  |
	  |   
	 / ––––––> x cw
    / 
   /
  v  
 z ⤵ cw 
''')
		renderCube()
		print("Enter your move: r, u, l, d, f, b, m. You can also enter moves like r2 or r'.")
		print("To move the cube around, use x, y and z. You can also enter moves like x2 or x'.")
		print("Enter Q to quit and H for help")
		move = input().lower().replace(' ', '').replace("’", "'")
	
	if move[0]=="x": 
		x()
		if move[-1]=="'": x(2)
		elif move[-1]=="2": x()
	elif move[0]=="y": 
		y()
		if move[-1]=="'": y(2)
		elif move[-1]=="2": y()
	elif move[0]=="z": 
		z()
		if move[-1]=="'": z(2)
		elif move[-1]=="2": z()
	elif move[0]=="r": 
		r()
		if move[-1]=="'": r(2)
		elif move[-1]=="2": r()
	elif move[0]=="u": 
		u()
		if move[-1]=="'": u(2)
		elif move[-1]=="2": u() 
	elif move[0]=="l": 
		l()
		if move[-1]=="'": l(2)
		elif move[-1]=="2": l()
	elif move[0]=="d": 
		d()
		if move[-1]=="'": d(2)
		elif move[-1]=="2": d() 
	elif move[0]=="f": 
		f()
		if move[-1]=="'": f(2)
		elif move[-1]=="2": f()
	elif move[0]=="b": 
		b()
		if move[-1]=="'": b(2)
		elif move[-1]=="2": b()
	elif move[0]=="m": 
		m()
		if move[-1]=="'": m(2)
		elif move[-1]=="2": m()
	if move.lower()=="h":
		print("Please visit https://jperm.net/3x3/moves to understand cube notation")
	elif move.lower()=="q":
		quit()



